#!/usr/bin/env -S python3
#!/usr/bin/env -S python3 -i

# Copyright 2019 Victor Hugo Schulz

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#     http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import sys

sys.path.append("src/data_processing")

from src.data_processing.data_processing import *

def tests_batch():
    config_common_list = [ConfigCommon(), ConfigCommon(), ConfigCommon()]
    config_dut_list = [ConfigDut(gp_alg_variation = "REFERENCE", dut_identifier="Reference"),
                       ConfigDut(gp_alg_variation = "BINARY", gp_nn_error_angle=0.0005, dut_identifier="Modified e=0.5mrad"),
                       ConfigDut(gp_alg_variation = "BINARY", gp_nn_error_angle=0.0010, dut_identifier="Modified e=1.0mrad")]
    test_list = [TestStarIdHistogram,
                 TestStarTrackerPosition,
                 TestStarTrackerMagnitude,
                 TestStarTrackerFalseStars,
                 TestStarTrackerGridSize,
                 TestStarTrackerFocusDC]
    for test in test_list:
        test(config_common_list, config_dut_list)

def repr():
    config_common_list = [ConfigCommon(op_vertical_fov = 8, op_resolution = (512, 512), op_max_mag = 7.5),
                          ConfigCommon(op_vertical_fov = 12, op_resolution = (1024, 1024), op_max_mag = 6.0),
                          ConfigCommon(op_vertical_fov = 8, op_resolution = (640, 640), op_max_mag = 6.5)]
    config_dut_list = [ConfigDut(gp_alg_variation = "REFERENCE", dut_identifier="Padgett et al. 1997", gp_g = 40),
                       ConfigDut(gp_alg_variation = "REFERENCE", dut_identifier="Zhang et al. 2008", gp_g = 40),
                       ConfigDut(gp_alg_variation = "REFERENCE", dut_identifier="Na et al. 2009", gp_g = 40)]
    TestStarTrackerPositionRPR(config_common_list, config_dut_list)

def sim_validation():
    config_common_list = [ConfigCommon(op_resolution = (874,738), op_vertical_fov = 9.5, sp_psf_C = 25000, op_max_mag = 7)]
    config_dut_list = [ConfigDut(dut_name = "STAR_SIMULATOR_VALIDATION")]
    SingleTest(config_common_list, config_dut_list, False)

def real_images():
    config_common_list = [ConfigCommon(sequence_source="REAL_IMAGES", op_resolution = (874,738), op_vertical_fov = 9.5, sp_psf_C = 25000, op_max_mag = 4.5)]
    config_dut_list = [ConfigDut(dut_name = "STAR_TRACKER", cp_threshold=50, cp_relaxed_threshold=45, cp_min_px=5, gp_g=36)]
    SingleTest(config_common_list, config_dut_list, False)

tests_batch()
repr()
sim_validation()
real_images()
